{
	"datasources": [
		{
			"name": "application",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the application."
						}
					},
					{
						"name": "base_directory",
						"string": {
							"computed_optional_required": "computed",
							"description": "Base directory for all commands."
						}
					},
					{
						"name": "build_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Build command."
						}
					},
					{
						"name": "build_pack",
						"string": {
							"computed_optional_required": "computed",
							"description": "Build pack."
						}
					},
					{
						"name": "compose_parsing_version",
						"string": {
							"computed_optional_required": "computed",
							"description": "How Coolify parse the compose file."
						}
					},
					{
						"name": "config_hash",
						"string": {
							"computed_optional_required": "computed",
							"description": "Configuration hash."
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the application was created."
						}
					},
					{
						"name": "custom_docker_run_options",
						"string": {
							"computed_optional_required": "computed",
							"description": "Custom docker run options."
						}
					},
					{
						"name": "custom_healthcheck_found",
						"bool": {
							"computed_optional_required": "computed",
							"description": "Custom healthcheck found."
						}
					},
					{
						"name": "custom_labels",
						"string": {
							"computed_optional_required": "computed",
							"description": "Custom labels."
						}
					},
					{
						"name": "custom_nginx_configuration",
						"string": {
							"computed_optional_required": "computed",
							"description": "Custom Nginx configuration base64 encoded."
						}
					},
					{
						"name": "deleted_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the application was deleted."
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed",
							"description": "The application description."
						}
					},
					{
						"name": "destination_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Destination identifier."
						}
					},
					{
						"name": "destination_type",
						"string": {
							"computed_optional_required": "computed",
							"description": "Destination type."
						}
					},
					{
						"name": "docker_compose",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose content. Used for docker compose build pack."
						}
					},
					{
						"name": "docker_compose_custom_build_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose custom build command."
						}
					},
					{
						"name": "docker_compose_custom_start_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose custom start command."
						}
					},
					{
						"name": "docker_compose_domains",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose domains."
						}
					},
					{
						"name": "docker_compose_location",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose location."
						}
					},
					{
						"name": "docker_compose_raw",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose raw content."
						}
					},
					{
						"name": "docker_registry_image_name",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker registry image name."
						}
					},
					{
						"name": "docker_registry_image_tag",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker registry image tag."
						}
					},
					{
						"name": "dockerfile",
						"string": {
							"computed_optional_required": "computed",
							"description": "Dockerfile content. Used for dockerfile build pack."
						}
					},
					{
						"name": "dockerfile_location",
						"string": {
							"computed_optional_required": "computed",
							"description": "Dockerfile location."
						}
					},
					{
						"name": "dockerfile_target_build",
						"string": {
							"computed_optional_required": "computed",
							"description": "Dockerfile target build."
						}
					},
					{
						"name": "environment_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Environment identifier."
						}
					},
					{
						"name": "fqdn",
						"string": {
							"computed_optional_required": "computed",
							"description": "The application domains."
						}
					},
					{
						"name": "git_branch",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git branch."
						}
					},
					{
						"name": "git_commit_sha",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git commit SHA."
						}
					},
					{
						"name": "git_full_url",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git full URL."
						}
					},
					{
						"name": "git_repository",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git repository URL."
						}
					},
					{
						"name": "health_check_enabled",
						"bool": {
							"computed_optional_required": "computed",
							"description": "Health check enabled."
						}
					},
					{
						"name": "health_check_host",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check host."
						}
					},
					{
						"name": "health_check_interval",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check interval in seconds."
						}
					},
					{
						"name": "health_check_method",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check method."
						}
					},
					{
						"name": "health_check_path",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check path."
						}
					},
					{
						"name": "health_check_port",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check port."
						}
					},
					{
						"name": "health_check_response_text",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check response text."
						}
					},
					{
						"name": "health_check_retries",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check retries count."
						}
					},
					{
						"name": "health_check_return_code",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check return code."
						}
					},
					{
						"name": "health_check_scheme",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check scheme."
						}
					},
					{
						"name": "health_check_start_period",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check start period in seconds."
						}
					},
					{
						"name": "health_check_timeout",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check timeout in seconds."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The application identifier in the database."
						}
					},
					{
						"name": "install_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Install command."
						}
					},
					{
						"name": "limits_cpu_shares",
						"int64": {
							"computed_optional_required": "computed",
							"description": "CPU shares."
						}
					},
					{
						"name": "limits_cpus",
						"string": {
							"computed_optional_required": "computed",
							"description": "CPU limit."
						}
					},
					{
						"name": "limits_cpuset",
						"string": {
							"computed_optional_required": "computed",
							"description": "CPU set."
						}
					},
					{
						"name": "limits_memory",
						"string": {
							"computed_optional_required": "computed",
							"description": "Memory limit."
						}
					},
					{
						"name": "limits_memory_reservation",
						"string": {
							"computed_optional_required": "computed",
							"description": "Memory reservation."
						}
					},
					{
						"name": "limits_memory_swap",
						"string": {
							"computed_optional_required": "computed",
							"description": "Memory swap limit."
						}
					},
					{
						"name": "limits_memory_swappiness",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Memory swappiness."
						}
					},
					{
						"name": "manual_webhook_secret_bitbucket",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for Bitbucket."
						}
					},
					{
						"name": "manual_webhook_secret_gitea",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for Gitea."
						}
					},
					{
						"name": "manual_webhook_secret_github",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for GitHub."
						}
					},
					{
						"name": "manual_webhook_secret_gitlab",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for GitLab."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed",
							"description": "The application name."
						}
					},
					{
						"name": "ports_exposes",
						"string": {
							"computed_optional_required": "computed",
							"description": "Ports exposes."
						}
					},
					{
						"name": "ports_mappings",
						"string": {
							"computed_optional_required": "computed",
							"description": "Ports mappings."
						}
					},
					{
						"name": "post_deployment_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Post deployment command."
						}
					},
					{
						"name": "post_deployment_command_container",
						"string": {
							"computed_optional_required": "computed",
							"description": "Post deployment command container."
						}
					},
					{
						"name": "pre_deployment_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Pre deployment command."
						}
					},
					{
						"name": "pre_deployment_command_container",
						"string": {
							"computed_optional_required": "computed",
							"description": "Pre deployment command container."
						}
					},
					{
						"name": "preview_url_template",
						"string": {
							"computed_optional_required": "computed",
							"description": "Preview URL template."
						}
					},
					{
						"name": "private_key_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Private key identifier."
						}
					},
					{
						"name": "publish_directory",
						"string": {
							"computed_optional_required": "computed",
							"description": "Publish directory."
						}
					},
					{
						"name": "redirect",
						"string": {
							"computed_optional_required": "computed",
							"description": "How to set redirect with Traefik / Caddy. www\u003c-\u003enon-www."
						}
					},
					{
						"name": "repository_project_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The repository project identifier."
						}
					},
					{
						"name": "source_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Source identifier."
						}
					},
					{
						"name": "start_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Start command."
						}
					},
					{
						"name": "static_image",
						"string": {
							"computed_optional_required": "computed",
							"description": "Static image used when static site is deployed."
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Application status."
						}
					},
					{
						"name": "swarm_placement_constraints",
						"string": {
							"computed_optional_required": "computed",
							"description": "Swarm placement constraints. Only used for swarm deployments."
						}
					},
					{
						"name": "swarm_replicas",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Swarm replicas. Only used for swarm deployments."
						}
					},
					{
						"name": "updated_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the application was last updated."
						}
					},
					{
						"name": "watch_paths",
						"string": {
							"computed_optional_required": "computed",
							"description": "Watch paths."
						}
					}
				]
			}
		},
		{
			"name": "applications",
			"schema": {
				"attributes": [
					{
						"name": "applications",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "base_directory",
										"string": {
											"computed_optional_required": "computed",
											"description": "Base directory for all commands."
										}
									},
									{
										"name": "build_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Build command."
										}
									},
									{
										"name": "build_pack",
										"string": {
											"computed_optional_required": "computed",
											"description": "Build pack."
										}
									},
									{
										"name": "compose_parsing_version",
										"string": {
											"computed_optional_required": "computed",
											"description": "How Coolify parse the compose file."
										}
									},
									{
										"name": "config_hash",
										"string": {
											"computed_optional_required": "computed",
											"description": "Configuration hash."
										}
									},
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date and time when the application was created."
										}
									},
									{
										"name": "custom_docker_run_options",
										"string": {
											"computed_optional_required": "computed",
											"description": "Custom docker run options."
										}
									},
									{
										"name": "custom_healthcheck_found",
										"bool": {
											"computed_optional_required": "computed",
											"description": "Custom healthcheck found."
										}
									},
									{
										"name": "custom_labels",
										"string": {
											"computed_optional_required": "computed",
											"description": "Custom labels."
										}
									},
									{
										"name": "custom_nginx_configuration",
										"string": {
											"computed_optional_required": "computed",
											"description": "Custom Nginx configuration base64 encoded."
										}
									},
									{
										"name": "deleted_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date and time when the application was deleted."
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed",
											"description": "The application description."
										}
									},
									{
										"name": "destination_id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Destination identifier."
										}
									},
									{
										"name": "destination_type",
										"string": {
											"computed_optional_required": "computed",
											"description": "Destination type."
										}
									},
									{
										"name": "docker_compose",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker compose content. Used for docker compose build pack."
										}
									},
									{
										"name": "docker_compose_custom_build_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker compose custom build command."
										}
									},
									{
										"name": "docker_compose_custom_start_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker compose custom start command."
										}
									},
									{
										"name": "docker_compose_domains",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker compose domains."
										}
									},
									{
										"name": "docker_compose_location",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker compose location."
										}
									},
									{
										"name": "docker_compose_raw",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker compose raw content."
										}
									},
									{
										"name": "docker_registry_image_name",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker registry image name."
										}
									},
									{
										"name": "docker_registry_image_tag",
										"string": {
											"computed_optional_required": "computed",
											"description": "Docker registry image tag."
										}
									},
									{
										"name": "dockerfile",
										"string": {
											"computed_optional_required": "computed",
											"description": "Dockerfile content. Used for dockerfile build pack."
										}
									},
									{
										"name": "dockerfile_location",
										"string": {
											"computed_optional_required": "computed",
											"description": "Dockerfile location."
										}
									},
									{
										"name": "dockerfile_target_build",
										"string": {
											"computed_optional_required": "computed",
											"description": "Dockerfile target build."
										}
									},
									{
										"name": "environment_id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Environment identifier."
										}
									},
									{
										"name": "fqdn",
										"string": {
											"computed_optional_required": "computed",
											"description": "The application domains."
										}
									},
									{
										"name": "git_branch",
										"string": {
											"computed_optional_required": "computed",
											"description": "Git branch."
										}
									},
									{
										"name": "git_commit_sha",
										"string": {
											"computed_optional_required": "computed",
											"description": "Git commit SHA."
										}
									},
									{
										"name": "git_full_url",
										"string": {
											"computed_optional_required": "computed",
											"description": "Git full URL."
										}
									},
									{
										"name": "git_repository",
										"string": {
											"computed_optional_required": "computed",
											"description": "Git repository URL."
										}
									},
									{
										"name": "health_check_enabled",
										"bool": {
											"computed_optional_required": "computed",
											"description": "Health check enabled."
										}
									},
									{
										"name": "health_check_host",
										"string": {
											"computed_optional_required": "computed",
											"description": "Health check host."
										}
									},
									{
										"name": "health_check_interval",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Health check interval in seconds."
										}
									},
									{
										"name": "health_check_method",
										"string": {
											"computed_optional_required": "computed",
											"description": "Health check method."
										}
									},
									{
										"name": "health_check_path",
										"string": {
											"computed_optional_required": "computed",
											"description": "Health check path."
										}
									},
									{
										"name": "health_check_port",
										"string": {
											"computed_optional_required": "computed",
											"description": "Health check port."
										}
									},
									{
										"name": "health_check_response_text",
										"string": {
											"computed_optional_required": "computed",
											"description": "Health check response text."
										}
									},
									{
										"name": "health_check_retries",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Health check retries count."
										}
									},
									{
										"name": "health_check_return_code",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Health check return code."
										}
									},
									{
										"name": "health_check_scheme",
										"string": {
											"computed_optional_required": "computed",
											"description": "Health check scheme."
										}
									},
									{
										"name": "health_check_start_period",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Health check start period in seconds."
										}
									},
									{
										"name": "health_check_timeout",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Health check timeout in seconds."
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The application identifier in the database."
										}
									},
									{
										"name": "install_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Install command."
										}
									},
									{
										"name": "limits_cpu_shares",
										"int64": {
											"computed_optional_required": "computed",
											"description": "CPU shares."
										}
									},
									{
										"name": "limits_cpus",
										"string": {
											"computed_optional_required": "computed",
											"description": "CPU limit."
										}
									},
									{
										"name": "limits_cpuset",
										"string": {
											"computed_optional_required": "computed",
											"description": "CPU set."
										}
									},
									{
										"name": "limits_memory",
										"string": {
											"computed_optional_required": "computed",
											"description": "Memory limit."
										}
									},
									{
										"name": "limits_memory_reservation",
										"string": {
											"computed_optional_required": "computed",
											"description": "Memory reservation."
										}
									},
									{
										"name": "limits_memory_swap",
										"string": {
											"computed_optional_required": "computed",
											"description": "Memory swap limit."
										}
									},
									{
										"name": "limits_memory_swappiness",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Memory swappiness."
										}
									},
									{
										"name": "manual_webhook_secret_bitbucket",
										"string": {
											"computed_optional_required": "computed",
											"description": "Manual webhook secret for Bitbucket."
										}
									},
									{
										"name": "manual_webhook_secret_gitea",
										"string": {
											"computed_optional_required": "computed",
											"description": "Manual webhook secret for Gitea."
										}
									},
									{
										"name": "manual_webhook_secret_github",
										"string": {
											"computed_optional_required": "computed",
											"description": "Manual webhook secret for GitHub."
										}
									},
									{
										"name": "manual_webhook_secret_gitlab",
										"string": {
											"computed_optional_required": "computed",
											"description": "Manual webhook secret for GitLab."
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed",
											"description": "The application name."
										}
									},
									{
										"name": "ports_exposes",
										"string": {
											"computed_optional_required": "computed",
											"description": "Ports exposes."
										}
									},
									{
										"name": "ports_mappings",
										"string": {
											"computed_optional_required": "computed",
											"description": "Ports mappings."
										}
									},
									{
										"name": "post_deployment_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Post deployment command."
										}
									},
									{
										"name": "post_deployment_command_container",
										"string": {
											"computed_optional_required": "computed",
											"description": "Post deployment command container."
										}
									},
									{
										"name": "pre_deployment_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Pre deployment command."
										}
									},
									{
										"name": "pre_deployment_command_container",
										"string": {
											"computed_optional_required": "computed",
											"description": "Pre deployment command container."
										}
									},
									{
										"name": "preview_url_template",
										"string": {
											"computed_optional_required": "computed",
											"description": "Preview URL template."
										}
									},
									{
										"name": "private_key_id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Private key identifier."
										}
									},
									{
										"name": "publish_directory",
										"string": {
											"computed_optional_required": "computed",
											"description": "Publish directory."
										}
									},
									{
										"name": "redirect",
										"string": {
											"computed_optional_required": "computed",
											"description": "How to set redirect with Traefik / Caddy. www\u003c-\u003enon-www."
										}
									},
									{
										"name": "repository_project_id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The repository project identifier."
										}
									},
									{
										"name": "source_id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Source identifier."
										}
									},
									{
										"name": "start_command",
										"string": {
											"computed_optional_required": "computed",
											"description": "Start command."
										}
									},
									{
										"name": "static_image",
										"string": {
											"computed_optional_required": "computed",
											"description": "Static image used when static site is deployed."
										}
									},
									{
										"name": "status",
										"string": {
											"computed_optional_required": "computed",
											"description": "Application status."
										}
									},
									{
										"name": "swarm_placement_constraints",
										"string": {
											"computed_optional_required": "computed",
											"description": "Swarm placement constraints. Only used for swarm deployments."
										}
									},
									{
										"name": "swarm_replicas",
										"int64": {
											"computed_optional_required": "computed",
											"description": "Swarm replicas. Only used for swarm deployments."
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date and time when the application was last updated."
										}
									},
									{
										"name": "uuid",
										"string": {
											"computed_optional_required": "computed",
											"description": "The application UUID."
										}
									},
									{
										"name": "watch_paths",
										"string": {
											"computed_optional_required": "computed",
											"description": "Watch paths."
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "private_key",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "Private Key UUID"
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "fingerprint",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "is_git_related",
						"bool": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "private_key",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "team_id",
						"int64": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "updated_at",
						"string": {
							"computed_optional_required": "computed"
						}
					}
				]
			}
		},
		{
			"name": "private_keys",
			"schema": {
				"attributes": [
					{
						"name": "private_keys",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "fingerprint",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "is_git_related",
										"bool": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "private_key",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "team_id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "uuid",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "project",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "Project UUID"
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "environments",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "project_id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							},
							"description": "The environments of the project."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed"
						}
					}
				]
			}
		},
		{
			"name": "projects",
			"schema": {
				"attributes": [
					{
						"name": "projects",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "environments",
										"list_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "created_at",
														"string": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "description",
														"string": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "id",
														"int64": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "project_id",
														"int64": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "updated_at",
														"string": {
															"computed_optional_required": "computed"
														}
													}
												]
											},
											"description": "The environments of the project."
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "uuid",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "server",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "Server's UUID"
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed",
							"description": "The server description."
						}
					},
					{
						"name": "high_disk_usage_notification_sent",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to indicate if the high disk usage notification has been sent."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The server ID."
						}
					},
					{
						"name": "ip",
						"string": {
							"computed_optional_required": "computed",
							"description": "The IP address."
						}
					},
					{
						"name": "log_drain_notification_sent",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to indicate if the log drain notification has been sent."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed",
							"description": "The server name."
						}
					},
					{
						"name": "port",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The port number."
						}
					},
					{
						"name": "proxy_type",
						"string": {
							"computed_optional_required": "computed",
							"description": "The proxy type."
						}
					},
					{
						"name": "settings",
						"single_nested": {
							"computed_optional_required": "computed",
							"attributes": [
								{
									"name": "concurrent_builds",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "delete_unused_networks",
									"bool": {
										"computed_optional_required": "computed",
										"description": "The flag to indicate if the unused networks should be deleted."
									}
								},
								{
									"name": "delete_unused_volumes",
									"bool": {
										"computed_optional_required": "computed",
										"description": "The flag to indicate if the unused volumes should be deleted."
									}
								},
								{
									"name": "docker_cleanup_frequency",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "docker_cleanup_threshold",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "dynamic_timeout",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "force_disabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "force_server_cleanup",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "id",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_build_server",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_cloudflare_tunnel",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_jump_server",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_axiom_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_custom_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_highlight_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_newrelic_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_metrics_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_reachable",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_sentinel_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_swarm_manager",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_swarm_worker",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_usable",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_axiom_api_key",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_axiom_dataset_name",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_custom_config",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_custom_config_parser",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_highlight_project_id",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_newrelic_base_uri",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_newrelic_license_key",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "sentinel_metrics_history_days",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "sentinel_metrics_refresh_rate_seconds",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "sentinel_token",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "server_id",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "updated_at",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "wildcard_domain",
									"string": {
										"computed_optional_required": "computed"
									}
								}
							],
							"description": "Server Settings model"
						}
					},
					{
						"name": "swarm_cluster",
						"string": {
							"computed_optional_required": "computed",
							"description": "The swarm cluster configuration."
						}
					},
					{
						"name": "unreachable_count",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The unreachable count for your server."
						}
					},
					{
						"name": "unreachable_notification_sent",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to indicate if the unreachable notification has been sent."
						}
					},
					{
						"name": "user",
						"string": {
							"computed_optional_required": "computed",
							"description": "The user."
						}
					},
					{
						"name": "validation_logs",
						"string": {
							"computed_optional_required": "computed",
							"description": "The validation logs."
						}
					}
				]
			}
		},
		{
			"name": "server_domains",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "Server's UUID"
						}
					},
					{
						"name": "server_domains",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "domains",
										"list": {
											"computed_optional_required": "computed",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "server_resources",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "Server's UUID"
						}
					},
					{
						"name": "server_resources",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "status",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "uuid",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "servers",
			"schema": {
				"attributes": [
					{
						"name": "servers",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed",
											"description": "The server description."
										}
									},
									{
										"name": "high_disk_usage_notification_sent",
										"bool": {
											"computed_optional_required": "computed",
											"description": "The flag to indicate if the high disk usage notification has been sent."
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The server ID."
										}
									},
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed",
											"description": "The IP address."
										}
									},
									{
										"name": "log_drain_notification_sent",
										"bool": {
											"computed_optional_required": "computed",
											"description": "The flag to indicate if the log drain notification has been sent."
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed",
											"description": "The server name."
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The port number."
										}
									},
									{
										"name": "proxy_type",
										"string": {
											"computed_optional_required": "computed",
											"description": "The proxy type."
										}
									},
									{
										"name": "settings",
										"single_nested": {
											"computed_optional_required": "computed",
											"attributes": [
												{
													"name": "concurrent_builds",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "delete_unused_networks",
													"bool": {
														"computed_optional_required": "computed",
														"description": "The flag to indicate if the unused networks should be deleted."
													}
												},
												{
													"name": "delete_unused_volumes",
													"bool": {
														"computed_optional_required": "computed",
														"description": "The flag to indicate if the unused volumes should be deleted."
													}
												},
												{
													"name": "docker_cleanup_frequency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "docker_cleanup_threshold",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "dynamic_timeout",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "force_disabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "force_server_cleanup",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "id",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_build_server",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_cloudflare_tunnel",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_jump_server",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_logdrain_axiom_enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_logdrain_custom_enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_logdrain_highlight_enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_logdrain_newrelic_enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_metrics_enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_reachable",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_sentinel_enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_swarm_manager",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_swarm_worker",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "is_usable",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_axiom_api_key",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_axiom_dataset_name",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_custom_config",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_custom_config_parser",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_highlight_project_id",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_newrelic_base_uri",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "logdrain_newrelic_license_key",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "sentinel_metrics_history_days",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "sentinel_metrics_refresh_rate_seconds",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "sentinel_token",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "server_id",
													"int64": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "updated_at",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "wildcard_domain",
													"string": {
														"computed_optional_required": "computed"
													}
												}
											],
											"description": "Server Settings model"
										}
									},
									{
										"name": "swarm_cluster",
										"string": {
											"computed_optional_required": "computed",
											"description": "The swarm cluster configuration."
										}
									},
									{
										"name": "unreachable_count",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The unreachable count for your server."
										}
									},
									{
										"name": "unreachable_notification_sent",
										"bool": {
											"computed_optional_required": "computed",
											"description": "The flag to indicate if the unreachable notification has been sent."
										}
									},
									{
										"name": "user",
										"string": {
											"computed_optional_required": "computed",
											"description": "The user."
										}
									},
									{
										"name": "uuid",
										"string": {
											"computed_optional_required": "computed",
											"description": "The server UUID."
										}
									},
									{
										"name": "validation_logs",
										"string": {
											"computed_optional_required": "computed",
											"description": "The validation logs."
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "service",
			"schema": {
				"attributes": [
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "Service UUID"
						}
					},
					{
						"name": "config_hash",
						"string": {
							"computed_optional_required": "computed",
							"description": "The hash of the service configuration."
						}
					},
					{
						"name": "connect_to_docker_network",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to connect the service to the predefined Docker network."
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the service was created."
						}
					},
					{
						"name": "deleted_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the service was deleted."
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed",
							"description": "The description of the service."
						}
					},
					{
						"name": "destination_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The unique identifier of the destination where the service is running."
						}
					},
					{
						"name": "destination_type",
						"string": {
							"computed_optional_required": "computed",
							"description": "Destination type."
						}
					},
					{
						"name": "docker_compose",
						"string": {
							"computed_optional_required": "computed",
							"description": "The docker-compose.yml file that is parsed and modified by Coolify."
						}
					},
					{
						"name": "docker_compose_raw",
						"string": {
							"computed_optional_required": "computed",
							"description": "The raw docker-compose.yml file of the service."
						}
					},
					{
						"name": "environment_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The unique identifier of the environment where the service is attached to."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The unique identifier of the service. Only used for database identification."
						}
					},
					{
						"name": "is_container_label_escape_enabled",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to enable the container label escape."
						}
					},
					{
						"name": "is_container_label_readonly_enabled",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to enable the container label readonly."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed",
							"description": "The name of the service."
						}
					},
					{
						"name": "server_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The unique identifier of the server where the service is running."
						}
					},
					{
						"name": "service_type",
						"string": {
							"computed_optional_required": "computed",
							"description": "The type of the service."
						}
					},
					{
						"name": "updated_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the service was last updated."
						}
					}
				]
			}
		},
		{
			"name": "team",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "required",
							"description": "Team ID"
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time the team was created."
						}
					},
					{
						"name": "custom_server_limit",
						"string": {
							"computed_optional_required": "computed",
							"description": "The custom server limit."
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed",
							"description": "The description of the team."
						}
					},
					{
						"name": "members",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date when the user was created."
										}
									},
									{
										"name": "email",
										"string": {
											"computed_optional_required": "computed",
											"description": "The user email."
										}
									},
									{
										"name": "email_verified_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date when the user email was verified."
										}
									},
									{
										"name": "force_password_reset",
										"bool": {
											"computed_optional_required": "computed",
											"description": "The flag to force the user to reset the password."
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The user identifier in the database."
										}
									},
									{
										"name": "marketing_emails",
										"bool": {
											"computed_optional_required": "computed",
											"description": "The flag to receive marketing emails."
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed",
											"description": "The user name."
										}
									},
									{
										"name": "two_factor_confirmed_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date when the user two factor was confirmed."
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date when the user was updated."
										}
									}
								]
							},
							"description": "The members of the team."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed",
							"description": "The name of the team."
						}
					},
					{
						"name": "personal_team",
						"bool": {
							"computed_optional_required": "computed",
							"description": "Whether the team is personal or not."
						}
					},
					{
						"name": "show_boarding",
						"bool": {
							"computed_optional_required": "computed",
							"description": "Whether to show the boarding screen or not."
						}
					},
					{
						"name": "updated_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time the team was last updated."
						}
					}
				]
			}
		},
		{
			"name": "teams",
			"schema": {
				"attributes": [
					{
						"name": "teams",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date and time the team was created."
										}
									},
									{
										"name": "custom_server_limit",
										"string": {
											"computed_optional_required": "computed",
											"description": "The custom server limit."
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed",
											"description": "The description of the team."
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The unique identifier of the team."
										}
									},
									{
										"name": "members",
										"list_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "created_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date when the user was created."
														}
													},
													{
														"name": "email",
														"string": {
															"computed_optional_required": "computed",
															"description": "The user email."
														}
													},
													{
														"name": "email_verified_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date when the user email was verified."
														}
													},
													{
														"name": "force_password_reset",
														"bool": {
															"computed_optional_required": "computed",
															"description": "The flag to force the user to reset the password."
														}
													},
													{
														"name": "id",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The user identifier in the database."
														}
													},
													{
														"name": "marketing_emails",
														"bool": {
															"computed_optional_required": "computed",
															"description": "The flag to receive marketing emails."
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed",
															"description": "The user name."
														}
													},
													{
														"name": "two_factor_confirmed_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date when the user two factor was confirmed."
														}
													},
													{
														"name": "updated_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date when the user was updated."
														}
													}
												]
											},
											"description": "The members of the team."
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed",
											"description": "The name of the team."
										}
									},
									{
										"name": "personal_team",
										"bool": {
											"computed_optional_required": "computed",
											"description": "Whether the team is personal or not."
										}
									},
									{
										"name": "show_boarding",
										"bool": {
											"computed_optional_required": "computed",
											"description": "Whether to show the boarding screen or not."
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date and time the team was last updated."
										}
									}
								]
							}
						}
					}
				]
			}
		}
	],
	"provider": {
		"name": "coolify"
	},
	"resources": [
		{
			"name": "application",
			"schema": {
				"attributes": [
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The application description."
						}
					},
					{
						"name": "destination_uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The destination UUID if the server has more than one destinations."
						}
					},
					{
						"name": "docker_compose_raw",
						"string": {
							"computed_optional_required": "required",
							"description": "The Docker Compose raw content."
						}
					},
					{
						"name": "environment_name",
						"string": {
							"computed_optional_required": "required",
							"description": "The environment name. You need to provide at least one of environment_name or environment_uuid."
						}
					},
					{
						"name": "environment_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "The environment UUID. You need to provide at least one of environment_name or environment_uuid."
						}
					},
					{
						"name": "instant_deploy",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the application should be deployed instantly."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The application name."
						}
					},
					{
						"name": "project_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "The project UUID."
						}
					},
					{
						"name": "server_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "The server UUID."
						}
					},
					{
						"name": "use_build_server",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Use build server."
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "The application UUID."
						}
					},
					{
						"name": "base_directory",
						"string": {
							"computed_optional_required": "computed",
							"description": "Base directory for all commands."
						}
					},
					{
						"name": "build_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Build command."
						}
					},
					{
						"name": "build_pack",
						"string": {
							"computed_optional_required": "computed",
							"description": "Build pack."
						}
					},
					{
						"name": "compose_parsing_version",
						"string": {
							"computed_optional_required": "computed",
							"description": "How Coolify parse the compose file."
						}
					},
					{
						"name": "config_hash",
						"string": {
							"computed_optional_required": "computed",
							"description": "Configuration hash."
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the application was created."
						}
					},
					{
						"name": "custom_docker_run_options",
						"string": {
							"computed_optional_required": "computed",
							"description": "Custom docker run options."
						}
					},
					{
						"name": "custom_healthcheck_found",
						"bool": {
							"computed_optional_required": "computed",
							"description": "Custom healthcheck found."
						}
					},
					{
						"name": "custom_labels",
						"string": {
							"computed_optional_required": "computed",
							"description": "Custom labels."
						}
					},
					{
						"name": "custom_nginx_configuration",
						"string": {
							"computed_optional_required": "computed",
							"description": "Custom Nginx configuration base64 encoded."
						}
					},
					{
						"name": "deleted_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the application was deleted."
						}
					},
					{
						"name": "destination_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Destination identifier."
						}
					},
					{
						"name": "destination_type",
						"string": {
							"computed_optional_required": "computed",
							"description": "Destination type."
						}
					},
					{
						"name": "docker_compose",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose content. Used for docker compose build pack."
						}
					},
					{
						"name": "docker_compose_custom_build_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose custom build command."
						}
					},
					{
						"name": "docker_compose_custom_start_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose custom start command."
						}
					},
					{
						"name": "docker_compose_domains",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose domains."
						}
					},
					{
						"name": "docker_compose_location",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker compose location."
						}
					},
					{
						"name": "docker_registry_image_name",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker registry image name."
						}
					},
					{
						"name": "docker_registry_image_tag",
						"string": {
							"computed_optional_required": "computed",
							"description": "Docker registry image tag."
						}
					},
					{
						"name": "dockerfile",
						"string": {
							"computed_optional_required": "computed",
							"description": "Dockerfile content. Used for dockerfile build pack."
						}
					},
					{
						"name": "dockerfile_location",
						"string": {
							"computed_optional_required": "computed",
							"description": "Dockerfile location."
						}
					},
					{
						"name": "dockerfile_target_build",
						"string": {
							"computed_optional_required": "computed",
							"description": "Dockerfile target build."
						}
					},
					{
						"name": "environment_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Environment identifier."
						}
					},
					{
						"name": "fqdn",
						"string": {
							"computed_optional_required": "computed",
							"description": "The application domains."
						}
					},
					{
						"name": "git_branch",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git branch."
						}
					},
					{
						"name": "git_commit_sha",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git commit SHA."
						}
					},
					{
						"name": "git_full_url",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git full URL."
						}
					},
					{
						"name": "git_repository",
						"string": {
							"computed_optional_required": "computed",
							"description": "Git repository URL."
						}
					},
					{
						"name": "health_check_enabled",
						"bool": {
							"computed_optional_required": "computed",
							"description": "Health check enabled."
						}
					},
					{
						"name": "health_check_host",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check host."
						}
					},
					{
						"name": "health_check_interval",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check interval in seconds."
						}
					},
					{
						"name": "health_check_method",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check method."
						}
					},
					{
						"name": "health_check_path",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check path."
						}
					},
					{
						"name": "health_check_port",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check port."
						}
					},
					{
						"name": "health_check_response_text",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check response text."
						}
					},
					{
						"name": "health_check_retries",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check retries count."
						}
					},
					{
						"name": "health_check_return_code",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check return code."
						}
					},
					{
						"name": "health_check_scheme",
						"string": {
							"computed_optional_required": "computed",
							"description": "Health check scheme."
						}
					},
					{
						"name": "health_check_start_period",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check start period in seconds."
						}
					},
					{
						"name": "health_check_timeout",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Health check timeout in seconds."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The application identifier in the database."
						}
					},
					{
						"name": "install_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Install command."
						}
					},
					{
						"name": "limits_cpu_shares",
						"int64": {
							"computed_optional_required": "computed",
							"description": "CPU shares."
						}
					},
					{
						"name": "limits_cpus",
						"string": {
							"computed_optional_required": "computed",
							"description": "CPU limit."
						}
					},
					{
						"name": "limits_cpuset",
						"string": {
							"computed_optional_required": "computed",
							"description": "CPU set."
						}
					},
					{
						"name": "limits_memory",
						"string": {
							"computed_optional_required": "computed",
							"description": "Memory limit."
						}
					},
					{
						"name": "limits_memory_reservation",
						"string": {
							"computed_optional_required": "computed",
							"description": "Memory reservation."
						}
					},
					{
						"name": "limits_memory_swap",
						"string": {
							"computed_optional_required": "computed",
							"description": "Memory swap limit."
						}
					},
					{
						"name": "limits_memory_swappiness",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Memory swappiness."
						}
					},
					{
						"name": "manual_webhook_secret_bitbucket",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for Bitbucket."
						}
					},
					{
						"name": "manual_webhook_secret_gitea",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for Gitea."
						}
					},
					{
						"name": "manual_webhook_secret_github",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for GitHub."
						}
					},
					{
						"name": "manual_webhook_secret_gitlab",
						"string": {
							"computed_optional_required": "computed",
							"description": "Manual webhook secret for GitLab."
						}
					},
					{
						"name": "ports_exposes",
						"string": {
							"computed_optional_required": "computed",
							"description": "Ports exposes."
						}
					},
					{
						"name": "ports_mappings",
						"string": {
							"computed_optional_required": "computed",
							"description": "Ports mappings."
						}
					},
					{
						"name": "post_deployment_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Post deployment command."
						}
					},
					{
						"name": "post_deployment_command_container",
						"string": {
							"computed_optional_required": "computed",
							"description": "Post deployment command container."
						}
					},
					{
						"name": "pre_deployment_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Pre deployment command."
						}
					},
					{
						"name": "pre_deployment_command_container",
						"string": {
							"computed_optional_required": "computed",
							"description": "Pre deployment command container."
						}
					},
					{
						"name": "preview_url_template",
						"string": {
							"computed_optional_required": "computed",
							"description": "Preview URL template."
						}
					},
					{
						"name": "private_key_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Private key identifier."
						}
					},
					{
						"name": "publish_directory",
						"string": {
							"computed_optional_required": "computed",
							"description": "Publish directory."
						}
					},
					{
						"name": "redirect",
						"string": {
							"computed_optional_required": "computed",
							"description": "How to set redirect with Traefik / Caddy. www\u003c-\u003enon-www."
						}
					},
					{
						"name": "repository_project_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The repository project identifier."
						}
					},
					{
						"name": "source_id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Source identifier."
						}
					},
					{
						"name": "start_command",
						"string": {
							"computed_optional_required": "computed",
							"description": "Start command."
						}
					},
					{
						"name": "static_image",
						"string": {
							"computed_optional_required": "computed",
							"description": "Static image used when static site is deployed."
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Application status."
						}
					},
					{
						"name": "swarm_placement_constraints",
						"string": {
							"computed_optional_required": "computed",
							"description": "Swarm placement constraints. Only used for swarm deployments."
						}
					},
					{
						"name": "swarm_replicas",
						"int64": {
							"computed_optional_required": "computed",
							"description": "Swarm replicas. Only used for swarm deployments."
						}
					},
					{
						"name": "updated_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date and time when the application was last updated."
						}
					},
					{
						"name": "watch_paths",
						"string": {
							"computed_optional_required": "computed",
							"description": "Watch paths."
						}
					}
				]
			}
		},
		{
			"name": "application_envs",
			"schema": {
				"attributes": [
					{
						"name": "is_build_time",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is used in build time."
						}
					},
					{
						"name": "is_literal",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is a literal, nothing espaced."
						}
					},
					{
						"name": "is_multiline",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is multiline."
						}
					},
					{
						"name": "is_preview",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is used in preview deployments."
						}
					},
					{
						"name": "is_shown_once",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable's value is shown on the UI."
						}
					},
					{
						"name": "key",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The key of the environment variable."
						}
					},
					{
						"name": "value",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The value of the environment variable."
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "UUID of the application."
						}
					}
				]
			}
		},
		{
			"name": "mysql_database",
			"schema": {
				"attributes": [
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Description of the database"
						}
					},
					{
						"name": "destination_uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "UUID of the destination if the server has multiple destinations"
						}
					},
					{
						"name": "environment_name",
						"string": {
							"computed_optional_required": "required",
							"description": "Name of the environment. You need to provide at least one of environment_name or environment_uuid."
						}
					},
					{
						"name": "environment_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the environment. You need to provide at least one of environment_name or environment_uuid."
						}
					},
					{
						"name": "image",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Docker Image of the database"
						}
					},
					{
						"name": "instant_deploy",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Instant deploy the database"
						}
					},
					{
						"name": "is_public",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Is the database public?"
						}
					},
					{
						"name": "limits_cpu_shares",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "CPU shares of the database"
						}
					},
					{
						"name": "limits_cpus",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "CPU limit of the database"
						}
					},
					{
						"name": "limits_cpuset",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "CPU set of the database"
						}
					},
					{
						"name": "limits_memory",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Memory limit of the database"
						}
					},
					{
						"name": "limits_memory_reservation",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Memory reservation of the database"
						}
					},
					{
						"name": "limits_memory_swap",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Memory swap limit of the database"
						}
					},
					{
						"name": "limits_memory_swappiness",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Memory swappiness of the database"
						}
					},
					{
						"name": "mysql_conf",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "MySQL conf"
						}
					},
					{
						"name": "mysql_database",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "MySQL database"
						}
					},
					{
						"name": "mysql_password",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "MySQL password"
						}
					},
					{
						"name": "mysql_root_password",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "MySQL root password"
						}
					},
					{
						"name": "mysql_user",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "MySQL user"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Name of the database"
						}
					},
					{
						"name": "project_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the project"
						}
					},
					{
						"name": "public_port",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Public port of the database"
						}
					},
					{
						"name": "server_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the server"
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "UUID of the database."
						}
					}
				]
			}
		},
		{
			"name": "postgresql_database",
			"schema": {
				"attributes": [
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Description of the database"
						}
					},
					{
						"name": "destination_uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "UUID of the destination if the server has multiple destinations"
						}
					},
					{
						"name": "environment_name",
						"string": {
							"computed_optional_required": "required",
							"description": "Name of the environment. You need to provide at least one of environment_name or environment_uuid."
						}
					},
					{
						"name": "environment_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the environment. You need to provide at least one of environment_name or environment_uuid."
						}
					},
					{
						"name": "image",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Docker Image of the database"
						}
					},
					{
						"name": "instant_deploy",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Instant deploy the database"
						}
					},
					{
						"name": "is_public",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Is the database public?"
						}
					},
					{
						"name": "limits_cpu_shares",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "CPU shares of the database"
						}
					},
					{
						"name": "limits_cpus",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "CPU limit of the database"
						}
					},
					{
						"name": "limits_cpuset",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "CPU set of the database"
						}
					},
					{
						"name": "limits_memory",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Memory limit of the database"
						}
					},
					{
						"name": "limits_memory_reservation",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Memory reservation of the database"
						}
					},
					{
						"name": "limits_memory_swap",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Memory swap limit of the database"
						}
					},
					{
						"name": "limits_memory_swappiness",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Memory swappiness of the database"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Name of the database"
						}
					},
					{
						"name": "postgres_conf",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "PostgreSQL conf"
						}
					},
					{
						"name": "postgres_db",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "PostgreSQL database"
						}
					},
					{
						"name": "postgres_host_auth_method",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "PostgreSQL host auth method"
						}
					},
					{
						"name": "postgres_initdb_args",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "PostgreSQL initdb args"
						}
					},
					{
						"name": "postgres_password",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "PostgreSQL password"
						}
					},
					{
						"name": "postgres_user",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "PostgreSQL user"
						}
					},
					{
						"name": "project_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the project"
						}
					},
					{
						"name": "public_port",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Public port of the database"
						}
					},
					{
						"name": "server_uuid",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the server"
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "UUID of the database."
						}
					}
				]
			}
		},
		{
			"name": "private_key",
			"schema": {
				"attributes": [
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "private_key",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "Private Key UUID"
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "fingerprint",
						"string": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "is_git_related",
						"bool": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "team_id",
						"int64": {
							"computed_optional_required": "computed"
						}
					},
					{
						"name": "updated_at",
						"string": {
							"computed_optional_required": "computed"
						}
					}
				]
			}
		},
		{
			"name": "project",
			"schema": {
				"attributes": [
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The description of the project."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The name of the project."
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "The UUID of the project."
						}
					},
					{
						"name": "environments",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "project_id",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "updated_at",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							},
							"description": "The environments of the project."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed"
						}
					}
				]
			}
		},
		{
			"name": "server",
			"schema": {
				"attributes": [
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The description of the server."
						}
					},
					{
						"name": "instant_validate",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Instant validate."
						}
					},
					{
						"name": "ip",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The IP of the server."
						}
					},
					{
						"name": "is_build_server",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "Is build server."
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The name of the server."
						}
					},
					{
						"name": "port",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "The port of the server."
						}
					},
					{
						"name": "private_key_uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The UUID of the private key."
						}
					},
					{
						"name": "proxy_type",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The proxy type.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"traefik\",\n\"caddy\",\n\"none\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "user",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The user of the server."
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "The UUID of the server."
						}
					},
					{
						"name": "high_disk_usage_notification_sent",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to indicate if the high disk usage notification has been sent."
						}
					},
					{
						"name": "id",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The server ID."
						}
					},
					{
						"name": "log_drain_notification_sent",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to indicate if the log drain notification has been sent."
						}
					},
					{
						"name": "settings",
						"single_nested": {
							"computed_optional_required": "computed",
							"attributes": [
								{
									"name": "concurrent_builds",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "delete_unused_networks",
									"bool": {
										"computed_optional_required": "computed",
										"description": "The flag to indicate if the unused networks should be deleted."
									}
								},
								{
									"name": "delete_unused_volumes",
									"bool": {
										"computed_optional_required": "computed",
										"description": "The flag to indicate if the unused volumes should be deleted."
									}
								},
								{
									"name": "docker_cleanup_frequency",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "docker_cleanup_threshold",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "dynamic_timeout",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "force_disabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "force_server_cleanup",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "id",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_build_server",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_cloudflare_tunnel",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_jump_server",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_axiom_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_custom_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_highlight_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_logdrain_newrelic_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_metrics_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_reachable",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_sentinel_enabled",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_swarm_manager",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_swarm_worker",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "is_usable",
									"bool": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_axiom_api_key",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_axiom_dataset_name",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_custom_config",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_custom_config_parser",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_highlight_project_id",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_newrelic_base_uri",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "logdrain_newrelic_license_key",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "sentinel_metrics_history_days",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "sentinel_metrics_refresh_rate_seconds",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "sentinel_token",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "server_id",
									"int64": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "updated_at",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "wildcard_domain",
									"string": {
										"computed_optional_required": "computed"
									}
								}
							],
							"description": "Server Settings model"
						}
					},
					{
						"name": "swarm_cluster",
						"string": {
							"computed_optional_required": "computed",
							"description": "The swarm cluster configuration."
						}
					},
					{
						"name": "unreachable_count",
						"int64": {
							"computed_optional_required": "computed",
							"description": "The unreachable count for your server."
						}
					},
					{
						"name": "unreachable_notification_sent",
						"bool": {
							"computed_optional_required": "computed",
							"description": "The flag to indicate if the unreachable notification has been sent."
						}
					},
					{
						"name": "validation_logs",
						"string": {
							"computed_optional_required": "computed",
							"description": "The validation logs."
						}
					}
				]
			}
		},
		{
			"name": "service_envs",
			"schema": {
				"attributes": [
					{
						"name": "is_build_time",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is used in build time."
						}
					},
					{
						"name": "is_literal",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is a literal, nothing espaced."
						}
					},
					{
						"name": "is_multiline",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is multiline."
						}
					},
					{
						"name": "is_preview",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable is used in preview deployments."
						}
					},
					{
						"name": "is_shown_once",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "The flag to indicate if the environment variable's value is shown on the UI."
						}
					},
					{
						"name": "key",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The key of the environment variable."
						}
					},
					{
						"name": "value",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The value of the environment variable."
						}
					},
					{
						"name": "uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "UUID of the service."
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}