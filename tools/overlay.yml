# yaml-language-server: $schema=https://raw.githubusercontent.com/OAI/Overlay-Specification/refs/heads/main/schemas/v1.0/schema.yaml

overlay: 1.0.0
info:
  title: Fix upstream API issues
  version: 1.0.0
actions:
  - target: $.paths.*['post','get','put','patch','delete'].parameters[?(@.in=='path' && (@.name=='uuid' || @.name=='env_uuid'))]
    description: Replace "uuid" formats with "string". Coolify UUIDs are NOT correct UUID format.
    update:
      schema:
        type: string
        format:

  - target: "$.paths['/security/keys'].patch"
    description: Remove invalid patch operation - should be PATCH /security/keys/{uuid}
    remove: true
  - target: "$.paths['/security/keys/{uuid}']"
    description: Add a patch operation to update a private key
    update:
      patch:
        tags:
          - "Private Keys"
        summary: Update
        description: "Update a private key."
        operationId: update-private-key
        requestBody:
          required: true
          content:
            application/json:
              schema:
                required:
                  - private_key
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  private_key:
                    type: string
                type: object
                additionalProperties: false
        responses:
          "201":
            description: "The updated private key's UUID."
            content:
              application/json:
                schema:
                  properties:
                    uuid: { type: string }
                  type: object
          "401":
            $ref: "#/components/responses/401"
          "400":
            $ref: "#/components/responses/400"
        security:
          - bearerAuth: []

  - target: $.paths['/projects/{uuid}', '/applications/{uuid}', '/security/keys/{uuid}'].patch
    description: add missing `uuid` parameters to patch operations
    update:
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string

  - target: "$.components.schemas.Server.properties.proxy"
    description: Remove `proxy` property, it's not being returned reliably
    remove: true

  - target: "$.paths['/services/{uuid}/envs/bulk', '/applications/{uuid}/envs/bulk'].patch.responses['201'].content['application/json'].schema"
    description: Fix response, should be array but is object
    update:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentVariable"

  - target: $.components.schemas
    description: Add common database properties
    update:
      DatabaseCommon:
        type: object
        required:
          - database_type
          - uuid
        properties:
          # Common properties
          database_type:
            type: string
          name:
            type: string
          uuid:
            type: string
          description:
            type: string
          deleted_at:
            type: string
            format: date-time
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          internal_db_url:
            type: string
          image:
            type: string
          is_public:
            type: boolean
            default: false
          public_port:
            type: integer
            nullable: true
          # Resource limits
          limits_cpu_shares:
            type: integer
          limits_cpus:
            type: string
          limits_cpuset:
            type: string
            nullable: true
          limits_memory:
            type: string
          limits_memory_reservation:
            type: string
          limits_memory_swap:
            type: string
          limits_memory_swappiness:
            type: integer

  - target: $.components.schemas
    description: Add a new schema for a PostgresqlDatabase
    update:
      PostgresqlDatabase:
        allOf:
          - $ref: "#/components/schemas/DatabaseCommon"
          - type: object
            properties:
              postgres_conf:
                type: string
                nullable: true
              postgres_db:
                type: string
              postgres_user:
                type: string
              postgres_password:
                type: string
              postgres_host_auth_method:
                type: string
              postgres_initdb_args:
                type: string

  - target: $.components.schemas
    description: Add a new schema for a MysqlDatabase
    update:
      MysqlDatabase:
        allOf:
          - $ref: "#/components/schemas/DatabaseCommon"
          - type: object
            properties:
              mysql_conf:
                type: string
                nullable: true
              mysql_database:
                type: string
              mysql_user:
                type: string
              mysql_password:
                type: string
              mysql_root_password:
                type: string

  - target: $.components.schemas
    description: Add a new schema for a Database
    update:
      Database:
        discriminator:
          propertyName: database_type
          mapping:
            standalone-postgresql: "#/components/schemas/PostgresqlDatabase"
            standalone-mysql: "#/components/schemas/MysqlDatabase"
        oneOf:
          - $ref: "#/components/schemas/DatabaseCommon" # Added so codegen creates a struct for usage
          - $ref: "#/components/schemas/PostgresqlDatabase"
          - $ref: "#/components/schemas/MysqlDatabase"

  - target: $.paths['/databases/{uuid}'].get.responses['200'].content['application/json'].schema
    description: Set response schema to new Database schema
    update:
      $ref: "#/components/schemas/Database"
  - target: $.paths['/databases'].get.responses['200'].content['application/json'].schema
    description: Set response schema to new Database schema
    update:
      type: array
      items:
        $ref: "#/components/schemas/Database"

  - target: $.paths['/databases/postgresql', '/databases/mysql'].post.responses
    description: Add missing response to database creation
    update:
      "201":
        content:
          application/json:
            schema:
              required:
                - uuid
                - internal_db_url
              properties:
                uuid:
                  type: string
                internal_db_url:
                  type: string
              type: object

  # add fingerprint to private key schema
  - target: $.components.schemas.PrivateKey.properties
    description: Add fingerprint to PrivateKey schema
    update:
      fingerprint:
        type: string

  # add x-omitempty to dockercompose applications
  - target: $.paths['/applications/dockercompose'].post.requestBody.content['application/json'].schema
    description: add x-omitempty to `use_build_server` parameters in applications
    update:
      properties:
        use_build_server:
          x-omitempty: true
